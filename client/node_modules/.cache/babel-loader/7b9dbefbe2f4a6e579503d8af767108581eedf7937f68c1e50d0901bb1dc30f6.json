{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\Project\\\\claude ai\\\\BookMyService\\\\client\\\\src\\\\pages\\\\Notifications.js\",\n  _s = $RefreshSig$();\n// File: client/src/pages/Notifications.js\nimport React, { useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const response = await api.get('/users/notifications');\n        setNotifications(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load notifications');\n      }\n    };\n    fetchNotifications();\n  }, []);\n  const markAsRead = async id => {\n    try {\n      await api.patch(`/users/notifications/${id}/read`);\n      setNotifications(notifications.filter(n => n._id !== id));\n    } catch (err) {\n      console.error('Failed to mark as read:', err);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500 text-center\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  if (!notifications.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No new notifications.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 mb-4 rounded flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => markAsRead(notification._id),\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Mark as Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, notification._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"pN6uUe2w5G4jdqr3kMPPd2yL/7I=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","error","setError","fetchNotifications","response","get","data","err","_err$response","_err$response$data","message","markAsRead","id","patch","filter","n","_id","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","onClick","_c","$RefreshReg$"],"sources":["D:/Data/Project/claude ai/BookMyService/client/src/pages/Notifications.js"],"sourcesContent":["// File: client/src/pages/Notifications.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nconst Notifications = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const response = await api.get('/users/notifications');\r\n        setNotifications(response.data);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || 'Failed to load notifications');\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      await api.patch(`/users/notifications/${id}/read`);\r\n      setNotifications(notifications.filter((n) => n._id !== id));\r\n    } catch (err) {\r\n      console.error('Failed to mark as read:', err);\r\n    }\r\n  };\r\n\r\n  if (error) return <p className=\"text-red-500 text-center\">{error}</p>;\r\n  if (!notifications.length) return <p>No new notifications.</p>;\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Notifications</h1>\r\n      {notifications.map((notification) => (\r\n        <div key={notification._id} className=\"border p-4 mb-4 rounded flex justify-between items-center\">\r\n          <p>{notification.message}</p>\r\n          <button\r\n            onClick={() => markAsRead(notification._id)}\r\n            className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n          >\r\n            Mark as Read\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}