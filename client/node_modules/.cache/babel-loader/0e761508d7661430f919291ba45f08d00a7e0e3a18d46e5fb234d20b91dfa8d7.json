{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\Project\\\\claude ai\\\\BookMyServiceV2\\\\client\\\\src\\\\components\\\\ThreadList.js\",\n  _s = $RefreshSig$();\n// client/src/components/ThreadList.js\nimport React, { useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreadList = ({\n  conversationId,\n  activeThreadId,\n  onThreadSelect\n}) => {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (conversationId) {\n      fetchThreads();\n    }\n  }, [conversationId]);\n  const fetchThreads = async () => {\n    try {\n      setIsLoading(true);\n      const response = await api.get(`/messages/conversation/${conversationId}/threads`);\n      setThreads(response.data);\n\n      // If there are threads but no active thread, select the first one\n      if (response.data.length > 0 && !activeThreadId) {\n        onThreadSelect(response.data[0]._id);\n      } else if (response.data.length === 0) {\n        // If no threads exist, create a general thread\n        createGeneralThread();\n      }\n    } catch (err) {\n      console.error('Error fetching threads:', err);\n      setError('Failed to load conversation threads');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to create a general thread if none exist\n  const createGeneralThread = async () => {\n    try {\n      const response = await api.get(`/messages/conversation/${conversationId}/thread/general`);\n      setThreads([response.data]);\n      onThreadSelect(response.data._id);\n    } catch (err) {\n      console.error('Error creating general thread:', err);\n      setError('Failed to create conversation thread');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-100 border-b border-gray-200 overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-pulse flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-8 w-24 bg-gray-300 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-8 w-24 bg-gray-300 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-100 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchThreads,\n        className: \"text-blue-500 text-sm hover:underline\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  if (!threads || threads.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2 bg-gray-100 border-b border-gray-200 overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2\",\n      children: threads.map(thread => {\n        var _thread$order, _thread$order$title, _thread$gig, _thread$gig$title;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onThreadSelect(thread._id),\n          className: `px-3 py-1 rounded-full text-sm whitespace-nowrap ${activeThreadId === thread._id ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}`,\n          children: thread.type === 'general' ? 'General' : thread.type === 'order' ? `Order: ${((_thread$order = thread.order) === null || _thread$order === void 0 ? void 0 : (_thread$order$title = _thread$order.title) === null || _thread$order$title === void 0 ? void 0 : _thread$order$title.substring(0, 10)) || 'Order'}` : thread.type === 'gig' ? `Gig: ${((_thread$gig = thread.gig) === null || _thread$gig === void 0 ? void 0 : (_thread$gig$title = _thread$gig.title) === null || _thread$gig$title === void 0 ? void 0 : _thread$gig$title.substring(0, 10)) || 'Gig'}` : thread.title || 'Thread'\n        }, thread._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreadList, \"1YgTz8bgEsESGWOFxsozee6rvqE=\");\n_c = ThreadList;\nexport default ThreadList;\nvar _c;\n$RefreshReg$(_c, \"ThreadList\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","ThreadList","conversationId","activeThreadId","onThreadSelect","_s","threads","setThreads","isLoading","setIsLoading","error","setError","fetchThreads","response","get","data","length","_id","createGeneralThread","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","thread","_thread$order","_thread$order$title","_thread$gig","_thread$gig$title","type","order","title","substring","gig","_c","$RefreshReg$"],"sources":["D:/Data/Project/claude ai/BookMyServiceV2/client/src/components/ThreadList.js"],"sourcesContent":["// client/src/components/ThreadList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nconst ThreadList = ({ conversationId, activeThreadId, onThreadSelect }) => {\r\n  const [threads, setThreads] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (conversationId) {\r\n      fetchThreads();\r\n    }\r\n  }, [conversationId]);\r\n\r\n  const fetchThreads = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await api.get(`/messages/conversation/${conversationId}/threads`);\r\n      \r\n      setThreads(response.data);\r\n      \r\n      // If there are threads but no active thread, select the first one\r\n      if (response.data.length > 0 && !activeThreadId) {\r\n        onThreadSelect(response.data[0]._id);\r\n      } else if (response.data.length === 0) {\r\n        // If no threads exist, create a general thread\r\n        createGeneralThread();\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching threads:', err);\r\n      setError('Failed to load conversation threads');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to create a general thread if none exist\r\n  const createGeneralThread = async () => {\r\n    try {\r\n      const response = await api.get(`/messages/conversation/${conversationId}/thread/general`);\r\n      setThreads([response.data]);\r\n      onThreadSelect(response.data._id);\r\n    } catch (err) {\r\n      console.error('Error creating general thread:', err);\r\n      setError('Failed to create conversation thread');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"p-2 bg-gray-100 border-b border-gray-200 overflow-x-auto\">\r\n        <div className=\"animate-pulse flex space-x-2\">\r\n          <div className=\"h-8 w-24 bg-gray-300 rounded\"></div>\r\n          <div className=\"h-8 w-24 bg-gray-300 rounded\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-2 bg-gray-100 border-b border-gray-200\">\r\n        <div className=\"text-red-500 text-sm\">{error}</div>\r\n        <button \r\n          onClick={fetchThreads}\r\n          className=\"text-blue-500 text-sm hover:underline\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!threads || threads.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2 bg-gray-100 border-b border-gray-200 overflow-x-auto\">\r\n      <div className=\"flex space-x-2\">\r\n        {threads.map(thread => (\r\n          <button\r\n            key={thread._id}\r\n            onClick={() => onThreadSelect(thread._id)}\r\n            className={`px-3 py-1 rounded-full text-sm whitespace-nowrap ${\r\n              activeThreadId === thread._id\r\n                ? 'bg-blue-500 text-white'\r\n                : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n            }`}\r\n          >\r\n            {thread.type === 'general' ? 'General' :\r\n             thread.type === 'order' ? `Order: ${thread.order?.title?.substring(0, 10) || 'Order'}` :\r\n             thread.type === 'gig' ? `Gig: ${thread.gig?.title?.substring(0, 10) || 'Gig'}` :\r\n             thread.title || 'Thread'}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadList;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,cAAc;EAAEC,cAAc;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAIK,cAAc,EAAE;MAClBU,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACV,cAAc,CAAC,CAAC;EAEpB,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMI,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAG,CAAC,0BAA0BZ,cAAc,UAAU,CAAC;MAElFK,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC;;MAEzB;MACA,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACb,cAAc,EAAE;QAC/CC,cAAc,CAACS,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC;MACtC,CAAC,MAAM,IAAIJ,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACrC;QACAE,mBAAmB,CAAC,CAAC;MACvB;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAES,GAAG,CAAC;MAC7CR,QAAQ,CAAC,qCAAqC,CAAC;IACjD,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMf,GAAG,CAACgB,GAAG,CAAC,0BAA0BZ,cAAc,iBAAiB,CAAC;MACzFK,UAAU,CAAC,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC3BX,cAAc,CAACS,QAAQ,CAACE,IAAI,CAACE,GAAG,CAAC;IACnC,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACV,KAAK,CAAC,gCAAgC,EAAES,GAAG,CAAC;MACpDR,QAAQ,CAAC,sCAAsC,CAAC;IAClD;EACF,CAAC;EAED,IAAIH,SAAS,EAAE;IACb,oBACER,OAAA;MAAKqB,SAAS,EAAC,0DAA0D;MAAAC,QAAA,eACvEtB,OAAA;QAAKqB,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3CtB,OAAA;UAAKqB,SAAS,EAAC;QAA8B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpD1B,OAAA;UAAKqB,SAAS,EAAC;QAA8B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAIhB,KAAK,EAAE;IACT,oBACEV,OAAA;MAAKqB,SAAS,EAAC,0CAA0C;MAAAC,QAAA,gBACvDtB,OAAA;QAAKqB,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAEZ;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnD1B,OAAA;QACE2B,OAAO,EAAEf,YAAa;QACtBS,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAClD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,IAAI,CAACpB,OAAO,IAAIA,OAAO,CAACU,MAAM,KAAK,CAAC,EAAE;IACpC,OAAO,IAAI;EACb;EAEA,oBACEhB,OAAA;IAAKqB,SAAS,EAAC,0DAA0D;IAAAC,QAAA,eACvEtB,OAAA;MAAKqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BhB,OAAO,CAACsB,GAAG,CAACC,MAAM;QAAA,IAAAC,aAAA,EAAAC,mBAAA,EAAAC,WAAA,EAAAC,iBAAA;QAAA,oBACjBjC,OAAA;UAEE2B,OAAO,EAAEA,CAAA,KAAMvB,cAAc,CAACyB,MAAM,CAACZ,GAAG,CAAE;UAC1CI,SAAS,EAAE,oDACTlB,cAAc,KAAK0B,MAAM,CAACZ,GAAG,GACzB,wBAAwB,GACxB,gEAAgE,EACnE;UAAAK,QAAA,EAEFO,MAAM,CAACK,IAAI,KAAK,SAAS,GAAG,SAAS,GACrCL,MAAM,CAACK,IAAI,KAAK,OAAO,GAAG,UAAU,EAAAJ,aAAA,GAAAD,MAAM,CAACM,KAAK,cAAAL,aAAA,wBAAAC,mBAAA,GAAZD,aAAA,CAAcM,KAAK,cAAAL,mBAAA,uBAAnBA,mBAAA,CAAqBM,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAI,OAAO,EAAE,GACtFR,MAAM,CAACK,IAAI,KAAK,KAAK,GAAG,QAAQ,EAAAF,WAAA,GAAAH,MAAM,CAACS,GAAG,cAAAN,WAAA,wBAAAC,iBAAA,GAAVD,WAAA,CAAYI,KAAK,cAAAH,iBAAA,uBAAjBA,iBAAA,CAAmBI,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAI,KAAK,EAAE,GAC9ER,MAAM,CAACO,KAAK,IAAI;QAAQ,GAXpBP,MAAM,CAACZ,GAAG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYT,CAAC;MAAA,CACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhGIJ,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAkGhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}