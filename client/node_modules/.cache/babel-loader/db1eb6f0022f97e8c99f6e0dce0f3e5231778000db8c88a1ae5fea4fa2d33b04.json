{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\Project\\\\claude ai\\\\BookMyServiceV2\\\\client\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\n// File: client/src/pages/Messages.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const response = await api.get('/messages/conversations');\n        setConversations(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load conversations');\n      }\n    };\n    fetchConversations();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500 text-center\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n  if (!conversations.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No conversations found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), conversations.map(conv => {\n      var _conv$order, _conv$lastMessage;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/messages/${conv._id}`,\n        className: \"block border p-4 mb-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order: \", (_conv$order = conv.order) === null || _conv$order === void 0 ? void 0 : _conv$order.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Message: \", ((_conv$lastMessage = conv.lastMessage) === null || _conv$lastMessage === void 0 ? void 0 : _conv$lastMessage.content) || 'No messages yet']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, conv._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"8w3InBq4kOXOH8iTx2n3BQmmH+c=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","Link","api","jsxDEV","_jsxDEV","Messages","_s","conversations","setConversations","error","setError","fetchConversations","response","get","data","err","_err$response","_err$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","conv","_conv$order","_conv$lastMessage","to","_id","order","title","lastMessage","content","_c","$RefreshReg$"],"sources":["D:/Data/Project/claude ai/BookMyServiceV2/client/src/pages/Messages.js"],"sourcesContent":["// File: client/src/pages/Messages.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../utils/api';\r\n\r\nconst Messages = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const response = await api.get('/messages/conversations');\r\n        setConversations(response.data);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || 'Failed to load conversations');\r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n  }, []);\r\n\r\n  if (error) return <p className=\"text-red-500 text-center\">{error}</p>;\r\n  if (!conversations.length) return <p>No conversations found.</p>;\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Messages</h1>\r\n      {conversations.map(conv => (\r\n        <Link key={conv._id} to={`/messages/${conv._id}`} className=\"block border p-4 mb-4 rounded\">\r\n          <p>Order: {conv.order?.title}</p>\r\n          <p>Last Message: {conv.lastMessage?.content || 'No messages yet'}</p>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}