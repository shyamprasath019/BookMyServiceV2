{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\Project\\\\claude ai\\\\BookMyService\\\\client\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\n// File: client/src/components/Navbar.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [unreadCount, setUnreadCount] = useState(0);\n  useEffect(() => {\n    const fetchUnreadCount = async () => {\n      try {\n        const response = await api.get('/users/notifications/unread-count');\n        setUnreadCount(response.data.count);\n      } catch (err) {\n        console.error('Failed to fetch unread count:', err);\n      }\n    };\n    fetchUnreadCount();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-gray-800 text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/notifications\",\n        className: \"relative\",\n        children: [\"Notifications\", unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-red-500 text-white rounded-full px-2 ml-2\",\n          children: unreadCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"kbkQyZcWntSU4g4UPMkVP4HEso8=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","api","jsxDEV","_jsxDEV","Navbar","_s","unreadCount","setUnreadCount","fetchUnreadCount","response","get","data","count","err","console","error","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Data/Project/claude ai/BookMyService/client/src/components/Navbar.js"],"sourcesContent":["// File: client/src/components/Navbar.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../utils/api';\r\n\r\nconst Navbar = () => {\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchUnreadCount = async () => {\r\n      try {\r\n        const response = await api.get('/users/notifications/unread-count');\r\n        setUnreadCount(response.data.count);\r\n      } catch (err) {\r\n        console.error('Failed to fetch unread count:', err);\r\n      }\r\n    };\r\n\r\n    fetchUnreadCount();\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"bg-gray-800 text-white p-4\">\r\n      <div className=\"container mx-auto flex justify-between\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/dashboard\">Dashboard</Link>\r\n        <Link to=\"/notifications\" className=\"relative\">\r\n          Notifications\r\n          {unreadCount > 0 && (\r\n            <span className=\"bg-red-500 text-white rounded-full px-2 ml-2\">\r\n              {unreadCount}\r\n            </span>\r\n          )}\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,mCAAmC,CAAC;QACnEH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;MACrD;IACF,CAAC;IAEDL,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKa,SAAS,EAAC,4BAA4B;IAAAC,QAAA,eACzCd,OAAA;MAAKa,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDd,OAAA,CAACH,IAAI;QAACkB,EAAE,EAAC,GAAG;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxBnB,OAAA,CAACH,IAAI;QAACkB,EAAE,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtCnB,OAAA,CAACH,IAAI;QAACkB,EAAE,EAAC,gBAAgB;QAACF,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAC,eAE7C,EAACX,WAAW,GAAG,CAAC,iBACdH,OAAA;UAAMa,SAAS,EAAC,8CAA8C;UAAAC,QAAA,EAC3DX;QAAW;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhCID,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}