{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\Project\\\\claude ai\\\\BookMyServiceV2\\\\client\\\\src\\\\components\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../utils/api'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = ({\n  order,\n  onReviewSubmitted,\n  existingReview = null\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    rating: existingReview ? existingReview.rating : 5,\n    title: existingReview ? existingReview.title : '',\n    comment: existingReview ? existingReview.comment : ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (errors[name]) setErrors(prev => ({\n      ...prev,\n      [name]: null\n    }));\n  };\n  const handleRatingChange = newRating => {\n    setFormData(prev => ({\n      ...prev,\n      rating: newRating\n    }));\n    if (errors.rating) setErrors(prev => ({\n      ...prev,\n      rating: null\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setErrors({});\n    try {\n      const response = await api.post(`/orders/${order._id}/review`, formData);\n      onReviewSubmitted(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setErrors({\n        form: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to submit review'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleRatingChange(star),\n        children: star <= formData.rating ? '★' : '☆'\n      }, star, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"comment\",\n        value: formData.comment,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      children: isSubmitting ? 'Submitting...' : 'Submit Review'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), errors.form && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.form\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"Y2tinjPbyGtfsXYzQmYW4xAYGO0=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","ReviewForm","order","onReviewSubmitted","existingReview","_s","formData","setFormData","rating","title","comment","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","prev","handleRatingChange","newRating","handleSubmit","preventDefault","response","post","_id","data","err","_err$response","_err$response$data","form","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","star","type","onClick","onChange","required","disabled","_c","$RefreshReg$"],"sources":["D:/Data/Project/claude ai/BookMyServiceV2/client/src/components/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from '../utils/api'; // Ensure this path is correct\r\n\r\nconst ReviewForm = ({ order, onReviewSubmitted, existingReview = null }) => {\r\n  const [formData, setFormData] = useState({\r\n    rating: existingReview ? existingReview.rating : 5,\r\n    title: existingReview ? existingReview.title : '',\r\n    comment: existingReview ? existingReview.comment : ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    if (errors[name]) setErrors(prev => ({ ...prev, [name]: null }));\r\n  };\r\n\r\n  const handleRatingChange = (newRating) => {\r\n    setFormData(prev => ({ ...prev, rating: newRating }));\r\n    if (errors.rating) setErrors(prev => ({ ...prev, rating: null }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setErrors({});\r\n\r\n    try {\r\n      const response = await api.post(`/orders/${order._id}/review`, formData);\r\n      onReviewSubmitted(response.data);\r\n    } catch (err) {\r\n      setErrors({ form: err.response?.data?.message || 'Failed to submit review' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Rating:</label>\r\n        {[1, 2, 3, 4, 5].map((star) => (\r\n          <button key={star} type=\"button\" onClick={() => handleRatingChange(star)}>\r\n            {star <= formData.rating ? '★' : '☆'}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <label>Comment:</label>\r\n        <textarea\r\n          name=\"comment\"\r\n          value={formData.comment}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" disabled={isSubmitting}>\r\n        {isSubmitting ? 'Submitting...' : 'Submit Review'}\r\n      </button>\r\n      {errors.form && <p>{errors.form}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}