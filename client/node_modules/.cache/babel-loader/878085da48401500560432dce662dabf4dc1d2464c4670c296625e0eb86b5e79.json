{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\Project\\\\claude ai\\\\BookMyServiceV2\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// File: client/src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [activeRole, setActiveRole] = useState(null); // 'client' or 'freelancer'\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    const userRole = localStorage.getItem('activeRole');\n    if (token && user && userRole) {\n      setCurrentUser(JSON.parse(user));\n      setActiveRole(userRole);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    setLoading(false);\n  }, []);\n  const login = async (emailOrUsername, password, role) => {\n    try {\n      setError(null);\n      const response = await api.post('/auth/login', {\n        emailOrUsername,\n        password,\n        role // Send requested role to backend\n      });\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Verify user has the requested role\n      if (!user.roles.includes(role)) {\n        throw new Error(`You don't have an active ${role} account.`);\n      }\n\n      // Set auth token in axios defaults\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Save to localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('activeRole', role);\n\n      // Update state\n      setCurrentUser(user);\n      setActiveRole(role);\n      return user;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Login failed');\n      throw err;\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await api.post('/auth/register', userData);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Set auth token in axios defaults\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Save to localStorage with client role by default\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('activeRole', 'client'); // Default role is client\n\n      // Update state\n      setCurrentUser(user);\n      setActiveRole('client');\n      return user;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n      throw err;\n    }\n  };\n  const logout = () => {\n    // Remove from localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('activeRole');\n\n    // Remove auth token from axios defaults\n    delete api.defaults.headers.common['Authorization'];\n\n    // Update state\n    setCurrentUser(null);\n    setActiveRole(null);\n  };\n  const updateProfile = async userData => {\n    try {\n      setError(null);\n      const response = await api.put('/users/profile', userData);\n      const updatedUser = response.data;\n\n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      // Update state\n      setCurrentUser(updatedUser);\n      return updatedUser;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Profile update failed');\n      throw err;\n    }\n  };\n  const activateFreelancerAccount = async freelancerData => {\n    try {\n      setError(null);\n      // Call API to add freelancer role\n      const response = await api.post('/users/activate-freelancer', freelancerData);\n      const updatedUser = response.data;\n\n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      // Update state with new role but keep activeRole as client\n      setCurrentUser(updatedUser);\n      return updatedUser;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Freelancer activation failed');\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      activeRole,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      updateProfile,\n      activateFreelancerAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"f0dwHQ2xWR7vloA5IyKel8e50Bg=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","activeRole","setActiveRole","loading","setLoading","error","setError","token","localStorage","getItem","user","userRole","JSON","parse","defaults","headers","common","login","emailOrUsername","password","role","response","post","data","roles","includes","Error","setItem","stringify","err","_err$response","_err$response$data","message","register","userData","_err$response2","_err$response2$data","logout","removeItem","updateProfile","put","updatedUser","_err$response3","_err$response3$data","activateFreelancerAccount","freelancerData","_err$response4","_err$response4$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Data/Project/claude ai/BookMyServiceV2/client/src/context/AuthContext.js"],"sourcesContent":["// File: client/src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [activeRole, setActiveRole] = useState(null); // 'client' or 'freelancer'\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    const userRole = localStorage.getItem('activeRole');\r\n    \r\n    if (token && user && userRole) {\r\n      setCurrentUser(JSON.parse(user));\r\n      setActiveRole(userRole);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (emailOrUsername, password, role) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.post('/auth/login', { \r\n        emailOrUsername, \r\n        password,\r\n        role // Send requested role to backend\r\n      });\r\n      \r\n      const { user, token } = response.data;\r\n      \r\n      // Verify user has the requested role\r\n      if (!user.roles.includes(role)) {\r\n        throw new Error(`You don't have an active ${role} account.`);\r\n      }\r\n      \r\n      // Set auth token in axios defaults\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      localStorage.setItem('activeRole', role);\r\n      \r\n      // Update state\r\n      setCurrentUser(user);\r\n      setActiveRole(role);\r\n      return user;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || err.message || 'Login failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.post('/auth/register', userData);\r\n      const { user, token } = response.data;\r\n      \r\n      // Set auth token in axios defaults\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Save to localStorage with client role by default\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      localStorage.setItem('activeRole', 'client'); // Default role is client\r\n      \r\n      // Update state\r\n      setCurrentUser(user);\r\n      setActiveRole('client');\r\n      return user;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Registration failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Remove from localStorage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('activeRole');\r\n    \r\n    // Remove auth token from axios defaults\r\n    delete api.defaults.headers.common['Authorization'];\r\n    \r\n    // Update state\r\n    setCurrentUser(null);\r\n    setActiveRole(null);\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.put('/users/profile', userData);\r\n      const updatedUser = response.data;\r\n      \r\n      // Update localStorage\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      \r\n      // Update state\r\n      setCurrentUser(updatedUser);\r\n      return updatedUser;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Profile update failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const activateFreelancerAccount = async (freelancerData) => {\r\n    try {\r\n      setError(null);\r\n      // Call API to add freelancer role\r\n      const response = await api.post('/users/activate-freelancer', freelancerData);\r\n      const updatedUser = response.data;\r\n      \r\n      // Update localStorage\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      \r\n      // Update state with new role but keep activeRole as client\r\n      setCurrentUser(updatedUser);\r\n      return updatedUser;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Freelancer activation failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      currentUser,\r\n      activeRole,\r\n      loading,\r\n      error,\r\n      login,\r\n      register,\r\n      logout,\r\n      updateProfile,\r\n      activateFreelancerAccount\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}