{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\Project\\\\claude ai\\\\BookMyService\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// File: client/src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      setCurrentUser(JSON.parse(user));\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    setLoading(false);\n  }, []);\n  const login = async (emailOrUsername, password) => {\n    try {\n      setError(null);\n      const response = await api.post('/auth/login', {\n        emailOrUsername,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Set auth token in axios defaults\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Save to localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Update state\n      setCurrentUser(user);\n      return user;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n      throw err;\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await api.post('/auth/register', userData);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Set auth token in axios defaults\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Save to localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Update state\n      setCurrentUser(user);\n      return user;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n      throw err;\n    }\n  };\n  const logout = () => {\n    // Remove from localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Remove auth token from axios defaults\n    delete api.defaults.headers.common['Authorization'];\n\n    // Update state\n    setCurrentUser(null);\n  };\n  const updateProfile = async userData => {\n    try {\n      setError(null);\n      const response = await api.put(`/users/${currentUser._id}`, userData);\n      const updatedUser = response.data;\n\n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      // Update state\n      setCurrentUser(updatedUser);\n      return updatedUser;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Profile update failed');\n      throw err;\n    }\n  };\n  const switchRole = async role => {\n    try {\n      setError(null);\n      const response = await api.patch(`/users/switch-role`, {\n        role\n      });\n      const updatedUser = response.data;\n\n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      // Update state\n      setCurrentUser(updatedUser);\n      return updatedUser;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Role switch failed');\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      updateProfile,\n      switchRole\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","token","localStorage","getItem","user","JSON","parse","defaults","headers","common","login","emailOrUsername","password","response","post","data","setItem","stringify","err","_err$response","_err$response$data","message","register","userData","_err$response2","_err$response2$data","logout","removeItem","updateProfile","put","_id","updatedUser","_err$response3","_err$response3$data","switchRole","role","patch","_err$response4","_err$response4$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Data/Project/claude ai/BookMyService/client/src/context/AuthContext.js"],"sourcesContent":["// File: client/src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    \r\n    if (token && user) {\r\n      setCurrentUser(JSON.parse(user));\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (emailOrUsername, password) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.post('/auth/login', { emailOrUsername, password });\r\n      const { user, token } = response.data;\r\n      \r\n      // Set auth token in axios defaults\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Update state\r\n      setCurrentUser(user);\r\n      return user;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Login failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.post('/auth/register', userData);\r\n      const { user, token } = response.data;\r\n      \r\n      // Set auth token in axios defaults\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Update state\r\n      setCurrentUser(user);\r\n      return user;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Registration failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Remove from localStorage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Remove auth token from axios defaults\r\n    delete api.defaults.headers.common['Authorization'];\r\n    \r\n    // Update state\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.put(`/users/${currentUser._id}`, userData);\r\n      const updatedUser = response.data;\r\n      \r\n      // Update localStorage\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      \r\n      // Update state\r\n      setCurrentUser(updatedUser);\r\n      return updatedUser;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Profile update failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const switchRole = async (role) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.patch(`/users/switch-role`, { role });\r\n      const updatedUser = response.data;\r\n      \r\n      // Update localStorage\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      \r\n      // Update state\r\n      setCurrentUser(updatedUser);\r\n      return updatedUser;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Role switch failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      currentUser,\r\n      loading,\r\n      error,\r\n      login,\r\n      register,\r\n      logout,\r\n      updateProfile,\r\n      switchRole\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}