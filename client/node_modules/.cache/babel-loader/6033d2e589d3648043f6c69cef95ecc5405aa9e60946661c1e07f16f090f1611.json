{"ast":null,"code":"// File: client/src/utils/api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Add response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  // Handle specific messaging errors\n  if (error.response && error.response.status === 404) {\n    if (error.config.url.includes('/messages/conversation/')) {\n      // Conversation not found - log for debugging but don't redirect\n      console.warn('Conversation not found, but will be handled by component:', error.config.url);\n    }\n  }\n\n  // Handle 401 Unauthorized errors\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Only redirect to login if not already on login page\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/login';\n    }\n  }\n\n  // Handle 403 Forbidden errors with role information\n  if (error.response && error.response.status === 403 && error.response.data && error.response.data.message && error.response.data.message.includes('role')) {\n    console.warn('Role-based permission error:', error.response.data.message);\n  }\n  return Promise.reject(error);\n});\nconst safeApiCall = async (apiMethod, errorMessage = 'Operation failed') => {\n  try {\n    const response = await apiMethod();\n    return {\n      success: true,\n      data: response.data,\n      status: response.status\n    };\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2;\n    console.error(errorMessage, error);\n    return {\n      success: false,\n      error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || errorMessage,\n      status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n    };\n  }\n};\napi.safeCall = safeApiCall;\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","url","includes","console","warn","removeItem","window","location","pathname","href","data","message","safeApiCall","apiMethod","errorMessage","success","_error$response","_error$response$data","_error$response2","safeCall"],"sources":["D:/Data/Project/claude ai/BookMyServiceV2/client/src/utils/api.js"],"sourcesContent":["// File: client/src/utils/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Add response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Handle specific messaging errors\r\n    if (error.response && error.response.status === 404) {\r\n      if (error.config.url.includes('/messages/conversation/')) {\r\n        // Conversation not found - log for debugging but don't redirect\r\n        console.warn('Conversation not found, but will be handled by component:', error.config.url);\r\n      }\r\n    }\r\n    \r\n    // Handle 401 Unauthorized errors\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      \r\n      // Only redirect to login if not already on login page\r\n      if (!window.location.pathname.includes('/login')) {\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n    \r\n    // Handle 403 Forbidden errors with role information\r\n    if (error.response && error.response.status === 403 && \r\n        error.response.data && error.response.data.message &&\r\n        error.response.data.message.includes('role')) {\r\n      console.warn('Role-based permission error:', error.response.data.message);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst safeApiCall = async (apiMethod, errorMessage = 'Operation failed') => {\r\n  try {\r\n    const response = await apiMethod();\r\n    return { \r\n      success: true, \r\n      data: response.data, \r\n      status: response.status\r\n    };\r\n  } catch (error) {\r\n    console.error(errorMessage, error);\r\n    return { \r\n      success: false, \r\n      error: error.response?.data?.message || errorMessage,\r\n      status: error.response?.status\r\n    };\r\n  }\r\n};\r\napi.safeCall = safeApiCall;\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}